
==================== FINAL INTERFACE ====================
2018-10-21 14:41:55.248312 UTC

interface fuba-0.0.0-3eieV6EmdEzEjRMM0bjQlx:Foundation [family instance module] 8002
  interface hash: 658e80a19731629ffb658e0922cc62ad
  ABI hash: e983d29bbe7cbed11192283c3c7edf9b
  export-list hash: 763a4a0e19a653959309896cc4b14665
  orphan hash: 29dd7bd06bacadaada7a9e40e758e3b9
  flag hash: 032c0bad24dd9010acdfbd1c36263b26
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.resourcesApp
  Foundation.App{Foundation.App appConnPool appHttpManager appLogger appSettings appStatic}
  Foundation.Form
  Foundation.Handler
  Foundation.Widget
  Yesod.Routes.Class.Route{Foundation.FaviconR Foundation.HomeR Foundation.InsertSampleTypeR Foundation.InsertUserR Foundation.InsertUserTypeR Foundation.LoginnR Foundation.ReadSampleTypeR Foundation.ReadUserR Foundation.ReadUserTypeR Foundation.RobotsR Foundation.StaticR Foundation.UpdateUserR Foundation.UpdateUserTypeR}
module dependencies: Import.NoFoundation Model Settings
                     Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-2KJ6q2ZesXnJyBJoAaeIEZ
                      asn1-parse-0.9.4@asn1-parse-0.9.4-CGymIMNZAu9EAXZYa67C4v
                      asn1-types-0.3.2@asn1-types-0.3.2-Aunumts6hI5KWLpbv4WlnO
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-1MuCexGpWEyGQztz0qE624
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-D9DWb2tGI0E3tIVMl6MF2W
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-2NmLwhEPstk1yd8HUcxCdg
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-5JZ8IV3d0t1LX0KpNH9qY3
                      clientsession-0.9.1.2@clientsession-0.9.1.2-FQo8BXsG2lrIMMqs2VW5zg
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.2@conduit-combinators-1.1.2-3EXRwtCALHD30IEtLYtLtq
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-E7N9IU8NEct2Q9ykPMKz4v
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.3@cookie-0.4.3-LVlxdgOdUJj73o1VFenWKF
                      cprng-aes-0.6.1@cprng-aes-0.6.1-1UtN607VjNh5xMLVxy9Kve
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-D5PCvIrS0pW6bxw48uUkJc
                      crypto-random-0.0.9@crypto-random-0.0.9-FOYlYAU0pRxB9FluTKWOtE
                      cryptonite-0.23@cryptonite-0.23-7HSHrG0wtJ1HI7QYRylvqe
                      cryptonite-conduit-0.2.2@cryptonite-conduit-0.2.2-4s3RgFTnNBPKoLjIGxbq4L
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.2@email-validate-2.3.2-53hiZtxQSVlHuKDZMOj459
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.1@http-client-0.5.7.1-JXMrQZyx8tLLaSc7JvXnkJ
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-A4SqROfqJZk7ILUeKni7Yt
                      http-conduit-2.2.4@http-conduit-2.2.4-ARDcXcliQ6NC5SlBc0TOXI
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.10@memory-0.14.10-2eNZrHuuunT3mqsprgiAdr
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.5.0@mono-traversable-1.0.5.0-L59HPBAJcZbGlMEI5TnTJE
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-C7beDiMGdXM507hNGel198
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q
                      persistent-postgresql-2.6.2@persistent-postgresql-2.6.2-5PPygiAaLRE7UEfD88u0V8
                      persistent-template-2.5.3@persistent-template-2.5.3-Eo7SLuwZzwzIDXoxvwLBF1
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-BHE2rWhMPTNGPoCTf4d0Vf
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14.1@shakespeare-2.0.14.1-B0oxsaKvBwSLFAsyl1NfKF
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.2@tagsoup-0.14.2-4BEl66ZgFIa7gvi9mniici
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-6w4uMEZHiOeC86Kcj9YdOv
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-E8vtiR4KMVK82qiTEdVC4e
                      wai-extra-3.0.20.2@wai-extra-3.0.20.2-FZIfwBninleKHm4gfrfwwi
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-AI91xaTRgVd6QowW2YrPds
                      x509-store-1.6.5@x509-store-1.6.5-8YNUk4HyXmMHwm6BNvHcfZ
                      x509-system-1.6.6@x509-system-1.6.6-L4dkEwnLmExJBxMtjjxhy0
                      x509-validation-1.6.9@x509-validation-1.6.9-AzuiRCbZGue9t2EWLg6YeG
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-6roNRY56alz4MkGqppmxVM
                      yaml-0.8.25@yaml-0.8.25-GacYlXUBmBU3oj2vWEM2LR
                      yesod-1.4.5@yesod-1.4.5-ICTnNF4vRdi2hKo96tAIWQ
                      yesod-auth-1.4.21@yesod-auth-1.4.21-4kWFKa6yvCgHyqdlKx65BJ
                      yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ
                      yesod-form-1.4.16@yesod-form-1.4.16-JhnTWBZaCO1J0JeVUrh53v
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-KUGBJn2sYMk971qhriVQfA
                      yesod-persistent-1.4.3@yesod-persistent-1.4.3-GwYXgn9hRNx7S3iIDk8G60
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-2G6lCuWl1K7ErbmGT3O91D
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Block
         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.UArray.Base
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.1@http-client-0.5.7.1-JXMrQZyx8tLLaSc7JvXnkJ:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-C7beDiMGdXM507hNGel198:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.3@persistent-template-2.5.3-Eo7SLuwZzwzIDXoxvwLBF1:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
         yesod-auth-1.4.21@yesod-auth-1.4.21-4kWFKa6yvCgHyqdlKx65BJ:Yesod.Auth
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Block.Base
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.BoxedArray
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Monad
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.MutableBuilder
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Nat
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.NonEmpty
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Numerical.Subtractive
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.String
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.String.Encoding.ASCII7
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.String.Encoding.UTF16
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.String.Encoding.UTF32
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Types.AsciiString
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.Types.OffsetSize
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.UArray.Base
                         basement-0.0.4@basement-0.0.4-5G9Gc8Ht9hD9gydJD2I2TQ:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.2@email-validate-2.3.2-53hiZtxQSVlHuKDZMOj459:Text.Email.Parser
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Array.Bitmap
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Collection.Buildable
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Collection.Element
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Collection.Keyed
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Collection.Mutable
                         foundation-0.0.17@foundation-0.0.17-CL5hY2f92B7EywaUc6v2Lf:Foundation.Tuple
                         fuba-0.0.0-3eieV6EmdEzEjRMM0bjQlx:Model
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.1@http-client-0.5.7.1-JXMrQZyx8tLLaSc7JvXnkJ:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.5.0@mono-traversable-1.0.5.0-L59HPBAJcZbGlMEI5TnTJE:Data.Containers
                         mono-traversable-1.0.5.0@mono-traversable-1.0.5.0-L59HPBAJcZbGlMEI5TnTJE:Data.MonoTraversable
                         mono-traversable-1.0.5.0@mono-traversable-1.0.5.0-L59HPBAJcZbGlMEI5TnTJE:Data.NonNull
                         mono-traversable-1.0.5.0@mono-traversable-1.0.5.0-L59HPBAJcZbGlMEI5TnTJE:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-C7beDiMGdXM507hNGel198:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-JTWtTpDryL0AjYrLdBOMPb:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Class.PersistConfig
                         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.2@persistent-postgresql-2.6.2-5PPygiAaLRE7UEfD88u0V8:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14.1@shakespeare-2.0.14.1-B0oxsaKvBwSLFAsyl1NfKF:Text.Internal.Css
                         shakespeare-2.0.14.1@shakespeare-2.0.14.1-B0oxsaKvBwSLFAsyl1NfKF:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-auth-1.4.21@yesod-auth-1.4.21-4kWFKa6yvCgHyqdlKx65BJ:Yesod.Auth
                         yesod-auth-1.4.21@yesod-auth-1.4.21-4kWFKa6yvCgHyqdlKx65BJ:Yesod.Auth.Routes
                         yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Class.Handler
                         yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-2G6lCuWl1K7ErbmGT3O91D:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Category 74288f70105bf6db5ff51d18c3e2c349
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Text.ParserCombinators.ReadPrec 5a182a8d6deb0f7d67aed5fab08a5cc0
import  -/  base-4.9.1.0:Text.Read.Lex 16199fac3c6c2d64cc7c268f3c0d2269
import  -/  blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p:Text.Blaze.Html 835f81951872bd48727588c57b8222c5
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 192db525847d66243089501d3ee84714
import  -/  Import.NoFoundation fb4288dd559caa50ce1ad5c99b22212a
  exports: 0c50b3c7cbb6936141f71e5eadec287b
import  -/  Model 395c2a948895596dcf30cb9ace49313d
  SampleTypeId 62a27c59ed99b509bc1ed1c42bbc223e
  UserId 2b7ac21f422eab3d8a14ea731851a3f8
  UserTypeId dfa85f5afff2992521193426c4ae171f
import  -/  Settings d9b470713d0a04a88f484dae1b4d16ef
  AppSettings 7d22d0e16f6d04bb8a48f1f03fda55b2
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  http-client-0.5.7.1@http-client-0.5.7.1-JXMrQZyx8tLLaSc7JvXnkJ:Network.HTTP.Client.Types 85335d38db0a4abcd273948f035b4162
import  -/  path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5:Web.PathPieces cf96b7878e0fca4afda92e7ea989ff12
import  -/  persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql a0061cdc043a325ecff81a11afb9247d
import  -/  persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Run 59daeacf15c1026131cb92cc6399ee58
import  -/  persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Types dc41924da13724b9cfdfc3ffebe996cd
import  -/  persistent-2.7.1@persistent-2.7.1-1WVuu59EOj3Jd0m1ZC6k7q:Database.Persist.Sql.Types.Internal 634f4dfb663c0e0b7529e8c261357c4e
import  -/  shakespeare-2.0.14.1@shakespeare-2.0.14.1-B0oxsaKvBwSLFAsyl1NfKF:Text.Shakespeare.I18N 1337085de4d231b7b794cc2c4c679cb7
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e8aa34be3dde178f567ae461e65c988b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Class.Yesod f524d4cbbe2ea403d5127ad16281dbb2
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Handler b89902ca244a318959516752db93df1e
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Internal.TH 37c4335cfdbc01c6e589ba7709c7d2e3
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Core.Types 4312717abb372718199b51cfb01b15db
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Routes.Class fc13bd739641aa8e978d7faf04060a5b
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Routes.Parse a5e36cae29715e00094d177b29c23f29
import  -/  yesod-core-1.4.37.2@yesod-core-1.4.37.2-1ituzKMqV7DL2cDxlOmwIJ:Yesod.Routes.TH.Types 017c6c0511ac6e1e6fdf3ecefbdfcaf1
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-JhnTWBZaCO1J0JeVUrh53v:Yesod.Form.Fields 325a9594f97eb21b886956c1b88eb898
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-JhnTWBZaCO1J0JeVUrh53v:Yesod.Form.Types 030da41e02437327556066401ae0955d
import  -/  yesod-persistent-1.4.3@yesod-persistent-1.4.3-GwYXgn9hRNx7S3iIDk8G60:Yesod.Persist.Core 4db1e5de9b2bec761e0f4b255073121f
import  -/  yesod-static-1.5.3.1@yesod-static-1.5.3.1-2G6lCuWl1K7ErbmGT3O91D:Yesod.Static 84c83bc706b901083f1837be308e26b6
addDependentFile "config/routes"
78bdd223f5fba63402aef5a74c837c62
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
78bdd223f5fba63402aef5a74c837c62
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Yesod.Routes.Class.Route Foundation.App)
                   (b :: Yesod.Routes.Class.Route Foundation.App) ->
                 case Foundation.$fEqRoute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
78bdd223f5fba63402aef5a74c837c62
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.StaticR b1 -> Yesod.Static.$fEqRoute_$c== a1 b1 }
                   Foundation.FaviconR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.FaviconR -> GHC.Types.True }
                   Foundation.RobotsR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.RobotsR -> GHC.Types.True }
                   Foundation.LoginnR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.LoginnR -> GHC.Types.True }
                   Foundation.HomeR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.HomeR -> GHC.Types.True }
                   Foundation.InsertUserR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.InsertUserR -> GHC.Types.True }
                   Foundation.ReadUserR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.ReadUserR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUser0[0])
                                  (Trans
                                       (Model.N:R:KeyUser[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUser0[0])
                                  (Trans
                                       (Model.N:R:KeyUser[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.UpdateUserR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.UpdateUserR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUser0[0])
                                  (Trans
                                       (Model.N:R:KeyUser[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUser0[0])
                                  (Trans
                                       (Model.N:R:KeyUser[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.InsertSampleTypeR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.InsertSampleTypeR -> GHC.Types.True }
                   Foundation.ReadSampleTypeR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.ReadSampleTypeR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeySampleType0[0])
                                  (Trans
                                       (Model.N:R:KeySampleType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeySampleType0[0])
                                  (Trans
                                       (Model.N:R:KeySampleType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.InsertUserTypeR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.InsertUserTypeR -> GHC.Types.True }
                   Foundation.ReadUserTypeR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.ReadUserTypeR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUserType0[0])
                                  (Trans
                                       (Model.N:R:KeyUserType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUserType0[0])
                                  (Trans
                                       (Model.N:R:KeyUserType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.UpdateUserTypeR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.UpdateUserTypeR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUserType0[0])
                                  (Trans
                                       (Model.N:R:KeyUserType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUserType0[0])
                                  (Trans
                                       (Model.N:R:KeyUserType[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) } }) -}
78bdd223f5fba63402aef5a74c837c62
  $fHasHttpManagerApp ::
    Network.HTTP.Client.Types.HasHttpManager Foundation.App
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.appHttpManager
                  `cast`
                (Sym (Network.HTTP.Client.Types.N:HasHttpManager[0]
                          <Foundation.App>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
78bdd223f5fba63402aef5a74c837c62
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 ->
                 Foundation.$w$cparseRoute ww1 ww2 }) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute_$creadPrec
                  Foundation.$fReadRoute_$creadListPrec -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Yesod.Routes.Class.Route Foundation.App]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Yesod.Routes.Class.Route Foundation.App]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   eta
                   @ b
                   eta1) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute10 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional3
                           11#
                           @ b1
                           (\ (a1 :: Model.UserId) ->
                            k1
                              (Foundation.UpdateUserR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute11 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
ede9b2ac0d10d26f4127f52939d49b5e
  $fReadRoute11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UpdateUserR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute12 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional4
                           11#
                           @ b1
                           (\ (a1 :: Model.UserId) ->
                            k1
                              (Foundation.ReadUserR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute13 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
2c2fd7190849907ad72cf2e1b3a0199f
  $fReadRoute13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadUserR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute14 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional5
                           11#
                           @ b1
                           (\ (a1 :: Yesod.Routes.Class.Route Yesod.Static.Static) ->
                            k1
                              (Foundation.StaticR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute15 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
bcdd69d1cdbf2286c9a6ef6d3359a707
  $fReadRoute15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute41
                   Foundation.$fReadRoute17) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute38
                   Foundation.$fReadRoute18) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute18 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute35
                   Foundation.$fReadRoute19) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute19 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute32
                   Foundation.$fReadRoute20) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute20 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute29
                   Foundation.$fReadRoute21) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute21 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute26
                   Foundation.$fReadRoute22) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute22 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute23
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           (Yesod.Routes.Class.Route Foundation.App)))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute23 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute25,
                  Foundation.$fReadRoute24
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute24 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.InsertUserTypeR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
b830033faee02546fd5bedcd6447f1f9
  $fReadRoute25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InsertUserTypeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute26 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute28,
                  Foundation.$fReadRoute27
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute27 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.InsertSampleTypeR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
b95117cd570951c4678f20695cce2e09
  $fReadRoute28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InsertSampleTypeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute29 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute31,
                  Foundation.$fReadRoute30
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (n :: Text.ParserCombinators.ReadPrec.Prec) ->
                 let {
                   ds2 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = GHC.Read.choose2
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute16
                       n
                 } in
                 let {
                   ds1 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute14
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds3 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute12
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds4 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute10
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds5 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute8
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds6 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute6
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds7 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute4
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 (\ @ b
                    (k :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b) ->
                  Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                    @ b
                    (ds2
                       `cast`
                     (Text.ParserCombinators.ReadP.N:ReadP[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)
                       @ b
                       k)
                    (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                       @ b
                       (ds1
                          `cast`
                        (Text.ParserCombinators.ReadP.N:ReadP[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R)
                          @ b
                          k)
                       (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                          @ b
                          (ds3
                             `cast`
                           (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <Yesod.Routes.Class.Route Foundation.App>_R)
                             @ b
                             k)
                          (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                             @ b
                             (ds4
                                `cast`
                              (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Yesod.Routes.Class.Route Foundation.App>_R)
                                @ b
                                k)
                             (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                @ b
                                (ds5
                                   `cast`
                                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R)
                                   @ b
                                   k)
                                (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                   @ b
                                   (ds6
                                      `cast`
                                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                                         <Yesod.Routes.Class.Route Foundation.App>_R)
                                      @ b
                                      k)
                                   (ds7
                                      `cast`
                                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                                         <Yesod.Routes.Class.Route Foundation.App>_R)
                                      @ b
                                      k)))))))
                   `cast`
                 (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                           <Yesod.Routes.Class.Route Foundation.App>_R))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute30 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.InsertUserR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
3b3341b0cc61d2acd85a5de44aa30524
  $fReadRoute31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InsertUserR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute32 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute34,
                  Foundation.$fReadRoute33
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute33 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
7051de800b3464721ebc6f43075deb17
  $fReadRoute34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HomeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute35 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute37,
                  Foundation.$fReadRoute36
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute36 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LoginnR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
63d5dcc8bc55cffa6649a854bc5f735f
  $fReadRoute37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LoginnR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute38 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute40,
                  Foundation.$fReadRoute39
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute39 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.RobotsR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute4 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional
                           11#
                           @ b1
                           (\ (a1 :: Model.UserTypeId) ->
                            k1
                              (Foundation.UpdateUserTypeR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
45f85e1c030dc898194ccf4db3f8c8f4
  $fReadRoute40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RobotsR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute41 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute43,
                  Foundation.$fReadRoute42
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute42 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.FaviconR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
cd0e9f161a5b9e6019f443b4a059c321
  $fReadRoute43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FaviconR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute44 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   GHC.Read.$fRead()5
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
4bccd08e2754dc7d9e78dc0fb0b1a361
  $fReadRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UpdateUserTypeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute6 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional1
                           11#
                           @ b1
                           (\ (a1 :: Model.UserTypeId) ->
                            k1
                              (Foundation.ReadUserTypeR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute7 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
a98a8e597abf90103add78c572e75fae
  $fReadRoute7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadUserTypeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute8 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional2
                           11#
                           @ b1
                           (\ (a1 :: Model.SampleTypeId) ->
                            k1
                              (Foundation.ReadSampleTypeR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute9 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
30cc96d1fba54c3752a089be8d3c318b
  $fReadRoute9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadSampleTypeR"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute44) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Yesod.Routes.Class.Route Foundation.App]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Yesod.Routes.Class.Route Foundation.App]>_R))) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   ((GHC.Read.parens1
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Yesod.Routes.Class.Route Foundation.App>_R)
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
78bdd223f5fba63402aef5a74c837c62
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: [Text.Shakespeare.I18N.Lang])
                   (eta :: Yesod.Form.Types.FormMessage) ->
                 Yesod.Form.I18n.English.englishFormMessage eta) -}
78bdd223f5fba63402aef5a74c837c62
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
d8333f4642947ac6cb6471c790f2fa5d
  $fRenderRouteApp1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "userType"#) -}
99d94436485f7ffba75329cec28df488
  $fRenderRouteApp10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "read"#) -}
68d9871af31b96b6e116a386d19d4077
  $fRenderRouteApp11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "user"#) -}
05d5e8524e467c8b0490ff88e96e1ef0
  $fRenderRouteApp12 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp11
                   Foundation.$fRenderRouteApp3) -}
b82a9a9f55f87e6d2cf6605d703647e9
  $fRenderRouteApp13 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp14
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
4b7ce972b4ff8e7bd803555f7df0f24b
  $fRenderRouteApp14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "loginn"#) -}
ea9f76234055fa69997ade496c26d28c
  $fRenderRouteApp15 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
333e60a23a83241e2e6e1a902c49803c
  $fRenderRouteApp16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "robots.txt"#) -}
88899008a6460a79c5f94b1185b1a4db
  $fRenderRouteApp17 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp18
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
370c9db708bc0d513f9427534cfbe2ff
  $fRenderRouteApp18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "favicon.ico"#) -}
e349e779124325b5c6de9e695529dabf
  $fRenderRouteApp19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "static"#) -}
c09161ab11e52d6e6235de5009a25492
  $fRenderRouteApp2 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp1
                   Foundation.$fRenderRouteApp3) -}
8ca4ae079c870fadf8f998ec6ef7ad8f
  $fRenderRouteApp3 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp4
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
c8925c8952fd9da1f6eac388adfe34a8
  $fRenderRouteApp4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "insert"#) -}
1a47be86e27bc16e0fa0425555ff3076
  $fRenderRouteApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "sampleType"#) -}
ec0378cad3aa09871c325de86a95eedb
  $fRenderRouteApp6 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp5
                   Foundation.$fRenderRouteApp3) -}
7203403bb665d29a4bb945bb93f341c4
  $fRenderRouteApp7 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp8
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
30f45f7ef06e17245905bbf2af985f1a
  $fRenderRouteApp8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "update"#) -}
61692273498b0bc7a331a9701d80ad37
  $fRenderRouteApp9 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp10
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
78bdd223f5fba63402aef5a74c837c62
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR sub
                   -> case sub
                             `cast`
                           (Yesod.Static.D:R:RouteStatic0[0]) of wild1 { Yesod.Static.StaticRoute x2 y ->
                      (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp19
                         x2,
                       y) }
                   Foundation.FaviconR
                   -> (Foundation.$fRenderRouteApp17,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.RobotsR
                   -> (Foundation.$fRenderRouteApp15,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LoginnR
                   -> (Foundation.$fRenderRouteApp13,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HomeR
                   -> (GHC.Types.[] @ Data.Text.Internal.Text,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.InsertUserR
                   -> (Foundation.$fRenderRouteApp12,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ReadUserR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp11
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyUser0[0])
                                    (Trans
                                         (Model.N:R:KeyUser[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp9),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.UpdateUserR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp11
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyUser0[0])
                                    (Trans
                                         (Model.N:R:KeyUser[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp7),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.InsertSampleTypeR
                   -> (Foundation.$fRenderRouteApp6,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ReadSampleTypeR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp5
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeySampleType0[0])
                                    (Trans
                                         (Model.N:R:KeySampleType[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp9),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.InsertUserTypeR
                   -> (Foundation.$fRenderRouteApp2,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ReadUserTypeR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp1
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyUserType0[0])
                                    (Trans
                                         (Model.N:R:KeyUserType[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp9),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.UpdateUserTypeR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp1
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyUserType0[0])
                                    (Trans
                                         (Model.N:R:KeyUserType[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp7),
                       GHC.Types.[]
                         @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) }) -}
78bdd223f5fba63402aef5a74c837c62
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
b75ac72a83349112839196dc0ddc0427
  $fRouteAttrsApp1 :: Data.Set.Base.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
78bdd223f5fba63402aef5a74c837c62
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds of tpl { DEFAULT -> Foundation.$fRouteAttrsApp1 }) -}
1ea12d1a54857c419b4c7e3f3e1f1dd8
  $fRouteAttrsApp_$s$wgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U> -}
b5f76400116a4ae2aca9f7120ca4b588
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Base.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo5
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo5
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
2cf9bfd2ca6454c552c872e047d568f4
  $fRouteAttrsApp_$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U> -}
78bdd223f5fba63402aef5a74c837c62
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
78bdd223f5fba63402aef5a74c837c62
  $fShowRoute1 ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Foundation.$fShowRoute_$cshowsPrec
                   Foundation.$fShowRoute2) -}
8f710a1bd909e41c27f451a092127041
  $fShowRoute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
510bea58422ebfdf5ef1c1aa740e4a8f
  $fShowRoute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UpdateUserTypeR "#) -}
2998f64f4acde0afdb0a3aedf80faaa2
  $fShowRoute4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadUserTypeR "#) -}
c4478c199b34068fcf71f4f0d572ef3b
  $fShowRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadSampleTypeR "#) -}
4232897c002ca703c2a30bd4bb041a05
  $fShowRoute6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UpdateUserR "#) -}
15ac5ed0c0aa2c57b3881e997a88d5c7
  $fShowRoute7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadUserR "#) -}
8066ba53664ed284f6c48030ac35e9c7
  $fShowRoute8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR "#) -}
78bdd223f5fba63402aef5a74c837c62
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Yesod.Routes.Class.Route Foundation.App) ->
                 case x `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute8
                        (case b1
                                `cast`
                              (Yesod.Static.D:R:RouteStatic0[0]) of ww2 { Yesod.Static.StaticRoute ww3 ww4 ->
                         Yesod.Static.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Foundation.FaviconR -> Foundation.$fReadRoute43
                   Foundation.RobotsR -> Foundation.$fReadRoute40
                   Foundation.LoginnR -> Foundation.$fReadRoute37
                   Foundation.HomeR -> Foundation.$fReadRoute34
                   Foundation.InsertUserR -> Foundation.$fReadRoute31
                   Foundation.ReadUserR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute7
                        (Model.$w$cshowsPrec 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.UpdateUserR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute6
                        (Model.$w$cshowsPrec 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.InsertSampleTypeR -> Foundation.$fReadRoute28
                   Foundation.ReadSampleTypeR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute5
                        (Model.$w$cshowsPrec3 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.InsertUserTypeR -> Foundation.$fReadRoute25
                   Foundation.ReadUserTypeR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute4
                        (Model.$w$cshowsPrec1 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.UpdateUserTypeR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute3
                        (Model.$w$cshowsPrec1 11# b1 (GHC.Types.[] @ GHC.Types.Char)) }) -}
78bdd223f5fba63402aef5a74c837c62
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fShowRoute1) -}
78bdd223f5fba63402aef5a74c837c62
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fYesodApp_$capproot
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp_$cdefaultLayout
                  Foundation.$fYesodApp_$curlRenderOverride
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp_$cisAuthorized
                  Foundation.$fYesodApp_$cisWriteRequest
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp_$cjoinPath
                  Foundation.$fYesodApp_$caddStaticContent
                  Foundation.$fYesodApp_$cmaximumContentLength
                  Foundation.$fYesodApp_$cmakeLogger
                  Foundation.$fYesodApp_$cmessageLoggerSource
                  Foundation.$fYesodApp_$cjsLoader
                  Foundation.$fYesodApp_$cjsAttributes
                  Foundation.$fYesodApp_$cmakeSessionBackend
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp_$cshouldLog
                  Foundation.$fYesodApp_$cshouldLogIO
                  Foundation.$fYesodApp_$cyesodMiddleware
                  Foundation.$fYesodApp_$cyesodWithInternalState
                  Foundation.$fYesodApp_$cdefaultMessageWidget -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp1 ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: (\ (title :: Text.Blaze.Html.Html)
                   (body :: Text.Hamlet.HtmlUrl
                              (Yesod.Routes.Class.Route Foundation.App))
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 let {
                   lvl65 :: Text.Hamlet.Render
                              (Yesod.Routes.Class.Route Foundation.App)
                            -> Text.Blaze.Internal.MarkupM ()
                     {- Arity: 1 -}
                   = \ (_render :: Text.Hamlet.Render
                                     (Yesod.Routes.Class.Route Foundation.App)) ->
                     Text.Blaze.Internal.Append
                       @ ()
                       @ ()
                       Foundation.$fYesodApp6
                       (Text.Blaze.Internal.Append
                          @ ()
                          @ ()
                          title
                          (Text.Blaze.Internal.Append
                             @ ()
                             @ ()
                             Foundation.$fYesodApp2
                             (body _render)))
                 } in
                 let {
                   lvl66 :: Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl65
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl67 :: ((),
                             Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl66
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   (\ (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2,
                       (GHC.Tuple.(),
                        Yesod.Core.Types.GWData
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Body[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))
                          (GHC.Base.Just
                             @ Yesod.Core.Types.Title
                             title `cast` (Sym (Yesod.Core.Types.N:Title[0])))
                            `cast`
                          (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Script
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Script
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Stylesheet
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Stylesheet
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (Data.Map.Base.Tip
                             @ (GHC.Base.Maybe Data.Text.Internal.Text)
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Data.Text.Internal.Builder.Builder))
                          (GHC.Base.Nothing
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Text.Julius.Javascript))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Head[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))) #))
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   (\ (ds :: ())
                      (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2, lvl67 #))
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.App>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp10 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ res
                   (w :: Yesod.Core.Content.ToTypedContent res)
                   (w1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res)
                   (w2 :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Yesod.Core.Types.HandlerData ww1 ww2 ww3 ww4 ww5 ->
                 Foundation.$w$cyesodMiddleware
                   @ res
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w3 }) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp11 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (a :: Foundation.App)
                   (b :: Control.Monad.Logger.LogSource)
                   (c :: Control.Monad.Logger.LogLevel)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta2, Yesod.Core.Class.Yesod.defaultShouldLog b c #)) -}
1cf34c9943f4a795ed5e0e0b80ff853a
  $fYesodApp12 :: Yesod.Core.Types.FileUpload
  {- Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp13) -}
5db16a393a5abaea3b862337d58fe70f
  $fYesodApp13 ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Parse.FileInfo ()
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3,
     Unfolding: (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
b6c35213cbefca4d98fda8407e7bcd33
  $fYesodApp14 :: Yesod.Core.Types.FileUpload
  {- Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ (Network.Wai.Parse.FileInfo ())
                      @ Data.ByteString.Internal.ByteString)
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp15 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmakeSessionBackend w1) -}
0b91f08533f4b190bb9504fcaf5f33b9
  $fYesodApp16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7200000000000000) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp17 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Yesod.Core.Types.Logger)
                   (w2 :: Language.Haskell.TH.Syntax.Loc)
                   (w3 :: Control.Monad.Logger.LogSource)
                   (w4 :: Control.Monad.Logger.LogLevel)
                   (w5 :: System.Log.FastLogger.LogStr.LogStr)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmessageLoggerSource w1 w2 w3 w4 w5 w6) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp18 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x of wild { Foundation.App ds ds1 ds2 ds3 ds4 -> ds4 } #)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp19 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, True)
                (\ (ds :: Data.Text.Internal.Text)
                   (ds1 :: Data.Text.Internal.Text)
                   (ds2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (eta2 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta3,
                    GHC.Base.Nothing
                      @ (Data.Either.Either
                           Data.Text.Internal.Text
                           (Yesod.Routes.Class.Route Foundation.App,
                            [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)) -}
00c1da47b3eeb80578dd55a62298f682
  $fYesodApp2 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp3
                   GHC.Tuple.()) -}
21f7147c5b5a000c68d3d38016848b08
  $fYesodApp20 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1,
     Unfolding: (\ (ds :: (Data.Text.Internal.Text,
                           Data.Text.Internal.Text)) ->
                 (case ds of wild { (,) x y -> Data.Text.Encoding.encodeUtf8 x },
                  case ds of wild { (,) x y ->
                  case y of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                  case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.==# dt3 dt6) of wild3 {
                    GHC.Types.False
                    -> GHC.Base.Just
                         @ Data.ByteString.Internal.ByteString
                         (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                    GHC.Types.True
                    -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                GHC.Prim.Int# #)}
                              dt1
                              (GHC.Prim.int2Word# dt2)
                              dt4
                              (GHC.Prim.int2Word# dt5)
                              (GHC.Prim.int2Word# dt3)
                              GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                       case GHC.Prim.narrow32Int# ds12 of wild5 {
                         DEFAULT
                         -> GHC.Base.Just
                              @ Data.ByteString.Internal.ByteString
                              (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                         0#
                         -> GHC.Base.Nothing
                              @ Data.ByteString.Internal.ByteString } } } } } })) -}
0b154c5b29e3b8c7299111a9ad7ec506
  $fYesodApp21 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1 -}
d342b536cd11f36ef41023d9dc2a913d
  $fYesodApp22 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
899f97f7e0cd1d1bbd07ada4f296cbd4
  $fYesodApp23 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1,
     Unfolding: (\ (t :: Data.Text.Internal.Text) ->
                 case t of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                 DEFAULT -> GHC.Types.False '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           dt
                                           (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 2#) } } } } }
                       GHC.Types.True -> GHC.Types.True }
                 } in
                 case $wloop_all dt1 of wild1 {
                   GHC.Types.False -> wild
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# 1# dt2) of wild3 {
                        GHC.Types.False
                        -> case Data.Text.$witerN
                                  Foundation.$fYesodApp24
                                  dt
                                  dt1
                                  dt2 of ww4 { DEFAULT ->
                           case GHC.Prim.-# dt2 ww4 of wild5 {
                             DEFAULT -> Data.Text.Internal.Text dt (GHC.Prim.+# dt1 ww4) wild5
                             0# -> Data.Text.Internal.empty } }
                        GHC.Types.True -> Data.Text.Internal.empty } } }) -}
86e23167829cbb48eba3ce1f1424b109
  $fYesodApp24 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
6ccc98429a87814b92b79f77a35fa501
  $fYesodApp25 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Data.Text.Internal.Text) ->
                 case x of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt2 0#) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp26 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <Network.Wai.Internal.Request>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Network.Wai.Internal.Request>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case ipv1 of wild { Network.Wai.Internal.Request ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                            ds2 })
                           Foundation.$fYesodApp27 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #) }) -}
9e5059fc0e43a84d03b1309bf17bebe1
  $fYesodApp27 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp34
                   Foundation.$fYesodApp28) -}
8f6a52145cdfcb8a4eaab35b96433312
  $fYesodApp28 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp33
                   Foundation.$fYesodApp29) -}
6382e7b5cd7c2524934cc63b5f72879e
  $fYesodApp29 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp32
                   Foundation.$fYesodApp30) -}
2c63e294d7219e6a87de0ea94d856a06
  $fYesodApp3 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp4) -}
266e27d998dc5dbf1632c69c5d6e2a22
  $fYesodApp30 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp31
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
c286e8479e6bffedd50656e4295ee3f7
  $fYesodApp31 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "TRACE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
1a4bc6ee274d1a2355da334dd63afda4
  $fYesodApp32 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "OPTIONS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
eb0bdf33127f00c1018e4804583b8319
  $fYesodApp33 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "HEAD"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
698ace58694bc128a87c3d57858a9dc7
  $fYesodApp34 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "GET"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp35 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (4, True, True)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta2 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta3, Yesod.Core.Types.Authorized #)) -}
d772b2fd40b8baa6df2795f5262f02d7
  $fYesodApp4 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp5) -}
e7b86778e716c9ad0ec5def52098d65a
  $fYesodApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
aefcc9623ff7eff3b464812e7e3ef3ed
  $fYesodApp6 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp7
                   GHC.Tuple.()) -}
1a9e243b11fea18f5961940afdbd500f
  $fYesodApp7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp8) -}
c25c264690b12b0b42aa028ef8258aab
  $fYesodApp8 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp9) -}
6f50d30652a22dbdfff12a9cea851665
  $fYesodApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1>"#) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$caddStaticContent ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])))
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp19
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <GHC.Base.Maybe
                                            (Data.Either.Either
                                               Data.Text.Internal.Text
                                               (Yesod.Routes.Class.Route Foundation.App,
                                                [(Data.Text.Internal.Text,
                                                  Data.Text.Internal.Text)]))>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <GHC.Base.Maybe
                                       (Data.Either.Either
                                          Data.Text.Internal.Text
                                          (Yesod.Routes.Class.Route Foundation.App,
                                           [(Data.Text.Internal.Text,
                                             Data.Text.Internal.Text)]))>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$capproot :: Yesod.Core.Types.Approot Foundation.App
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Core.Types.ApprootRelative @ Foundation.App) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Base.Nothing @ (Yesod.Routes.Class.Route Foundation.App)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cdefaultLayout ::
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cdefaultMessageWidget ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R <Text.Hamlet.HtmlUrl
                         (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <()>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.TypedContent
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Network.Wai.Internal.RequestBodyLength) ->
                 Foundation.$w$cfileUpload w1) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cisAuthorized ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.AuthResult
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp35
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Yesod.Core.Types.AuthResult>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cisWriteRequest ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$fYesodApp26 eta eta1)
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <GHC.Types.Bool>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cjoinPath ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 4, Strictness: <L,A><L,1*U(U,U,U)><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cjsAttributes ::
    Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Types.[]
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cmakeLogger ::
    Foundation.App -> GHC.Types.IO Yesod.Core.Types.Logger
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp18
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cmakeSessionBackend ::
    Foundation.App
    -> GHC.Types.IO (GHC.Base.Maybe Yesod.Core.Types.SessionBackend)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp15
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe
                             (Yesod.Routes.Class.Route Foundation.App)) ->
                 GHC.Base.Just @ GHC.Word.Word64 (GHC.Word.W64# 2097152##)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cmessageLoggerSource ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp17
                  `cast`
                (<Foundation.App>_R
                 ->_R <Yesod.Core.Types.Logger>_R
                 ->_R <Language.Haskell.TH.Syntax.Loc>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cshouldLog ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Foundation.App)
                   (eta2 :: Control.Monad.Logger.LogSource)
                   (eta3 :: Control.Monad.Logger.LogLevel) ->
                 Yesod.Core.Class.Yesod.defaultShouldLog eta2 eta3) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cshouldLogIO ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp11
                  `cast`
                (<Foundation.App>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (y :: Foundation.App)
                   (route :: Yesod.Routes.Class.Route Foundation.App)
                   (params :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$curlRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cyesodMiddleware ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp10
                  `cast`
                (forall (res :: <*>_N).
                 <Yesod.Core.Content.ToTypedContent res>_R
                 ->_R <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <res>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <res>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, True)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (eta2 :: Control.Monad.Trans.Resource.InternalState
                            -> GHC.Types.IO a)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (Control.Exception.Base.bracket
                    @ Control.Monad.Trans.Resource.InternalState
                    @ ()
                    @ a
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$screateInternalState
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$scloseInternalState
                    eta2)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta3)
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodApp_ds ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Network.Wai.Internal.Request
  {- Unfolding: (Yesod.Core.Handler.waiRequest
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Yesod.Core.Class.Yesod.$dmdefaultLayout_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodPersistApp_$cp1YesodPersist
                  Foundation.$fYesodPersistApp_$crunDB -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp1 ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: (\ @ a
                   (action :: Yesod.Persist.Core.YesodDB Foundation.App a)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodPersistApp4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                 <GHC.Types.IO>_N <Foundation.App>_N))
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <Foundation.App>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 ((Data.Pool.withResource
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Yesod.Auth.$s$fMonadBaseControlbHandlerT @ Foundation.App)
                     (case ipv1 of wild { Foundation.App ds ds2 ds3 ds4 ds5 -> ds3 })
                     (Database.Persist.Sql.Run.runSqlConn
                        @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        @ a
                        (Yesod.Auth.$s$fMonadBaseControlbHandlerT @ Foundation.App)
                        Foundation.$fYesodPersistApp2
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        action
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N)_R))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <a>_N)
                    eta)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   ipv }) -}
9ccd1880ed147b731e400d7502d3cc05
  $fYesodPersistApp2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fYesodPersistApp3
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
800f1da51ad80244bfa9986e62dd8cd5
  $fYesodPersistApp3 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp4 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Yesod.Core.Class.Handler.HandlerSite
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Unfolding: (Yesod.Core.Handler.getYesod
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$cp1YesodPersist ::
    GHC.Base.Monad (Yesod.Persist.Core.YesodDB Foundation.App)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                   @ Database.Persist.Sql.Types.Internal.SqlBackend)
                  `cast`
                (GHC.Base.Monad
                   (Control.Monad.Trans.Reader.ReaderT
                      <*>_N
                      (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N)_N)_R -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$crunDB ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp1
                  `cast`
                (forall (a :: <GHC.Types.*>_N).
                 <Yesod.Persist.Core.YesodDB Foundation.App a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <a>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$dApplicative ::
    GHC.Base.Applicative
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Auth.$s$fApplicativeHandlerT @ Foundation.App) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                     = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                         @ GHC.Types.IO
                         @ Foundation.App
                         Yesod.Auth.$dmgetAuthEntity_$dMonad
                         @ a
                         eta
                   } in
                   (\ (eta1 :: r) ->
                    GHC.Base.const
                      @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                      @ r
                      m1
                      eta1)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <r>_R
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                             <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                      @ GHC.Types.IO
                      @ Foundation.App
                      Yesod.Auth.$dmgetAuthEntity_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         v
                         r1))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fFunctorReaderT -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fApplicativeReaderT_$cpure ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ r @ a (eta :: a) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                   = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                       @ GHC.Types.IO
                       @ Foundation.App
                       Yesod.Auth.$dmgetAuthEntity_$dMonad
                       @ a
                       eta
                 } in
                 (\ (eta1 :: r) ->
                  GHC.Base.const
                    @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ r
                    m1
                    eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <a>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ b
                           eta1
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Yesod.Auth.$dmgetAuthEntity_$dMonad
                       @ b
                       @ a
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT
                             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <b>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ a
                           eta
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Yesod.Auth.$dmgetAuthEntity_$dMonad
                       @ a
                       @ b
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <b>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Yesod.Auth.$dmgetAuthEntity_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         k
                         r1))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><L,C(C1(C1(C1(U))))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Yesod.Auth.$dmgetAuthEntity_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         (k a1)
                         r1))) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ r @ a (msg :: GHC.Base.String) (eta :: r) ->
                 Yesod.Auth.$dmgetAuthEntity_$s$fMonadHandlerT_$cfail
                   @ Foundation.App
                   @ a
                   msg)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
78bdd223f5fba63402aef5a74c837c62
  $fYesodPersistApp_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeReaderT -}
c654a6a7307a0146e54d13d5585a06db
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18001717610965423714##
                   9708705761741305272##
                   Foundation.$trModule
                   Foundation.$tc'App1) -}
125b195888cdf7de64836189caa572ef
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
736be54cdd689d7dbd8b43de7b8f70d4
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16693043425503634565##
                   14372031152261793343##
                   Foundation.$trModule
                   Foundation.$tcApp1) -}
da7a816b208e1ed51f5e90f629144275
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
30f44a44f427a57bfa4dfc6d9e5de8ce
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule2
                   Foundation.$trModule1) -}
8ad36a258879c33774564e7c32e58cec
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foundation"#) -}
d52baa496e18121501009787e06aba7f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "fuba-0.0.0-3eieV6EmdEzEjRMM0bjQlx"#) -}
23da0ce4ae3a8973fbeff61b66a63b80
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp25
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp23
                           w) }) -}
52570e44553ae25151de25a0fe073732
  $w$cfileUpload ::
    Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Network.Wai.Internal.RequestBodyLength) ->
                 case w of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp14
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord# x 50000##) of wild2 {
                        GHC.Types.False -> Foundation.$fYesodApp14
                        GHC.Types.True -> Foundation.$fYesodApp12 } } }) -}
8ba5cc72430c165a7ad6bc5fe8d3635f
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 let {
                   ds :: [GHC.Types.Char]
                   = case w of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                     let {
                       end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                     } in
                     letrec {
                       $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                         {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                       = \ (ww :: GHC.Prim.Int#) ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww end) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.geWord# r# 55296##) of wild2 {
                                GHC.Types.False
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                     ($wunfold (GHC.Prim.+# ww 1#))
                                GHC.Types.True
                                -> case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.leWord# r# 56319##) of wild3 {
                                     GHC.Types.False
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                          ($wunfold (GHC.Prim.+# ww 1#))
                                     GHC.Types.True
                                     -> case GHC.Prim.indexWord16Array#
                                               dt
                                               (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                        GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C#
                                             (GHC.Prim.chr#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.uncheckedIShiftL#
                                                         (GHC.Prim.-#
                                                            (GHC.Prim.word2Int# r#)
                                                            55296#)
                                                         10#)
                                                      (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                                   65536#)))
                                          ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                           GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                     } in
                     $wunfold dt1 }
                 } in
                 let {
                   ds1 :: Data.ByteString.Builder.Internal.Builder
                   = Network.HTTP.Types.URI.encodePath
                       (case w1 of wild {
                          [] -> Foundation.$fYesodApp22
                          : ds2 ds3
                          -> GHC.Base.map
                               @ Data.Text.Internal.Text
                               @ Data.Text.Internal.Text
                               Foundation.$fYesodApp21
                               wild })
                       (GHC.Base.map
                          @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                          @ (Data.ByteString.Internal.ByteString,
                             GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                          Foundation.$fYesodApp20
                          w2)
                 } in
                 (\ @ r (eta :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = ds1 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                        @ r
                        eta
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case w4 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                  Foundation.$wstep @ r ds w3 ww1 ww2 w5 })
                   `cast`
                 (Trans
                      (forall (r :: <*>_N).
                       <Data.ByteString.Builder.Internal.BuildStep r>_R
                       ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                      (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) -}
16d0891c83c3acc92ec7ab1863ae1f6a
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Web.ClientSession.getDefaultKey2
                        Web.ClientSession.defaultKeyFile
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp16
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.defaultClientSessionBackend3
                         ipv1
                         getCachedDate
                         Yesod.Core.Class.Yesod.defaultClientSessionBackend2)
                        `cast`
                      (Trans
                           (<Network.Wai.Internal.Request>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <(Data.Map.Base.Map
                                              Data.Text.Internal.Text
                                              Data.ByteString.Internal.ByteString,
                                            Yesod.Core.Types.SessionMap
                                            -> GHC.Types.IO [Yesod.Core.Types.Header])>_R))
                           (Sym (Yesod.Core.Types.N:SessionBackend[0]))) #) } } }) -}
efeaa90e73c86fc110ac090427a8f55e
  $w$cmessageLoggerSource ::
    Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Yesod.Core.Types.Logger)
                   (w1 :: Language.Haskell.TH.Syntax.Loc)
                   (w2 :: Control.Monad.Logger.LogSource)
                   (w3 :: Control.Monad.Logger.LogLevel)
                   (w4 :: System.Log.FastLogger.LogStr.LogStr)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w6 :: GHC.Prim.Void#)[OneShot] ->
                     case Yesod.Core.Class.Yesod.defaultMessageLoggerSource2
                            (Yesod.Core.Types.loggerDate w)
                            w1
                            w2
                            w3
                            w4
                            w5 of ds2 { (#,#) ipv2 ipv3 ->
                     Yesod.Core.Types.loggerPutStr1 w ipv3 ipv2 }
                 } in
                 case w3 of wild {
                   Control.Monad.Logger.LevelDebug -> (# w5, GHC.Tuple.() #)
                   Control.Monad.Logger.LevelInfo -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelWarn -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelError -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelOther a1 -> $j GHC.Prim.void# }) -}
78bdd223f5fba63402aef5a74c837c62
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
78bdd223f5fba63402aef5a74c837c62
  $w$cyesodMiddleware ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.YesodRequest
    -> Yesod.Core.Types.RunHandlerEnv Foundation.App
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> (Yesod.Routes.Class.Route Foundation.App
        -> Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 7,
     Strictness: <L,1*C1(C1(U(U,U)))><S,U><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
70d940a6cd3055ccd84cb04433bf0b5c
  $w$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
d02ec3f9d81a64aaf01dd7efde8d886f
  $woptional ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.UserType
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
3bae46d34954d4655b1a0630bc14f797
  $woptional1 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.UserType
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
05781ed890bd613d430864d0dbe26604
  $woptional2 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.SampleType
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
043733720f2f4908618be275f9932a44
  $woptional3 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.User
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
75f543d99abf6ff18ede14956cf131dc
  $woptional4 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.User
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
8e404bfa89dee2185d82ca17e85ec46e
  $woptional5 ::
    GHC.Prim.Int#
    -> forall b.
       (Yesod.Routes.Class.Route Yesod.Static.Static
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
a18c984c595fd02606319a142e9e32bd
  $wstep ::
    [GHC.Types.Char]
    -> (Data.ByteString.Builder.Internal.BufferRange
        -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,U><L,U><S,U>, Inline: [0] -}
78bdd223f5fba63402aef5a74c837c62
  data App
    = App {appSettings :: Settings.AppSettings,
           appStatic :: Yesod.Static.Static,
           appConnPool :: Database.Persist.Sql.Types.ConnectionPool,
           appHttpManager :: Network.HTTP.Client.Types.Manager,
           appLogger :: Yesod.Core.Types.Logger}
78bdd223f5fba63402aef5a74c837c62
  axiom D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
78bdd223f5fba63402aef5a74c837c62
  axiom D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
de432e3f9b7002ab308cd359ac8fc5ea
  type Form a =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         Foundation.Handler
         (Yesod.Form.Types.FormResult a, Foundation.Widget)
19ce2e455cad78ccae5c9fd66c62ee05
  type Handler =
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO
    :: GHC.Types.* -> *
78bdd223f5fba63402aef5a74c837c62
  data instance Yesod.Routes.Class.Route Foundation.App
    = StaticR (Yesod.Routes.Class.Route Yesod.Static.Static)
    | FaviconR
    | RobotsR
    | LoginnR
    | HomeR
    | InsertUserR
    | ReadUserR Model.UserId
    | UpdateUserR Model.UserId
    | InsertSampleTypeR
    | ReadSampleTypeR Model.SampleTypeId
    | InsertUserTypeR
    | ReadUserTypeR Model.UserTypeId
    | UpdateUserTypeR Model.UserTypeId
    RecFlag: Recursive
f2b0f9dc71678742b8171bda6e2ef9bf
  type Widget =
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
c3837850dea2c9f0bb0a2e9b48052fca
  appConnPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
78bdd223f5fba63402aef5a74c837c62
  appHttpManager ::
    Foundation.App -> Network.HTTP.Client.Types.Manager
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
bf75c72701a768aee725ae609692fd7d
  appLogger :: Foundation.App -> Yesod.Core.Types.Logger
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
793e4dee02658207695451a292ba55a2
  appSettings :: Foundation.App -> Settings.AppSettings
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
3a5ab074d05a28cda7f776b47df260a4
  appStatic :: Foundation.App -> Yesod.Static.Static
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
788e81f5f513e5cc34e5022524d8efb5
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp91
                   Foundation.resourcesApp1) -}
08861eaf87587840d52472e54bf8320b
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp86
                   Foundation.resourcesApp2) -}
9090737478562104351b8a6fe71f2864
  resourcesApp10 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp37
                   Foundation.resourcesApp11) -}
655461cb8e0c0247ae226f791201e07d
  resourcesApp11 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp27
                   Foundation.resourcesApp12) -}
50bf5987aad0088d2ef130e437397588
  resourcesApp12 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp13
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
2aa7d1d7b6a2ea55cdf04e00daa615b2
  resourcesApp13 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp14) -}
9acf8c8347545fe664d9b0210c430754
  resourcesApp14 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute5
                   Foundation.resourcesApp18
                   Foundation.resourcesApp15
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
30298fde9df0053b188584785af6d8d9
  resourcesApp15 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp16) -}
667978dc1998573ef29908b2471e744b
  resourcesApp16 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp17
                   (GHC.Types.[] @ GHC.Base.String)) -}
e56e97aadb57bf9df1823030465f1589
  resourcesApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PUT"#) -}
5bfc1b9b2e1ca44553dc1ed3bcef0d58
  resourcesApp18 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp25
                   Foundation.resourcesApp19) -}
1e34dea8e0ffa821a209838da293feb7
  resourcesApp19 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp23
                   Foundation.resourcesApp20) -}
940954a64341c0580be854267d972e62
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp81
                   Foundation.resourcesApp3) -}
f9a603b062d841464c940b7a4398ba98
  resourcesApp20 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp21
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
65bd7395520ded71237cb188b16de5e9
  resourcesApp21 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp22) -}
fcc7375670c346202dabea0c70a60894
  resourcesApp22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "update"#) -}
1ca80ab1b07d49142ba56c9a6f77c8b8
  resourcesApp23 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp24) -}
82bb93274800fec0ebb83328ee12268e
  resourcesApp24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserTypeId"#) -}
03d79a218b4e403913e5e1e76e47a683
  resourcesApp25 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp26) -}
ac33ae466054070cd5bab268ecc0d0e3
  resourcesApp26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userType"#) -}
4397c37f5f6e1050c088132c4561b063
  resourcesApp27 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp28) -}
869b4a11b12f05621341e7901650940d
  resourcesApp28 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute7
                   Foundation.resourcesApp32
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
b236e8cc3d6de8e2afe8a21115b112cf
  resourcesApp29 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp30) -}
17856050e935f186c6f1cb08da6aeeda
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp74
                   Foundation.resourcesApp4) -}
b210d11b4233031db5ec02be106247e5
  resourcesApp30 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp31
                   (GHC.Types.[] @ GHC.Base.String)) -}
f1216a4e986919e2b2a3cb92c7d19761
  resourcesApp31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET"#) -}
84fa35d3546f9601d580fe5c4fd3c055
  resourcesApp32 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp25
                   Foundation.resourcesApp33) -}
fa42d93d2e64b41de4246b81c83573ac
  resourcesApp33 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp23
                   Foundation.resourcesApp34) -}
0f9b004b8fe446fcb35bdbe881202c97
  resourcesApp34 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp35
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
70f71027b8c3c8b62f831e8bd0eb35f8
  resourcesApp35 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp36) -}
6005a15cee8921466b895ad6f34e7091
  resourcesApp36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "read"#) -}
95e123dc5794329f918dc68ad0a1d47d
  resourcesApp37 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp38) -}
8792163bdbdd2e0a4c9696aeb152d938
  resourcesApp38 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute25
                   Foundation.resourcesApp42
                   Foundation.resourcesApp39
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
47fd70d42c583bdf023e6b72efed6700
  resourcesApp39 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp40) -}
833b59943259f26582b6c7cda4e446f6
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp72
                   Foundation.resourcesApp5) -}
c0a07af51b138fea0c0c4c032ae7040a
  resourcesApp40 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp41
                   (GHC.Types.[] @ GHC.Base.String)) -}
76879a04274aa020298ba38d1d4d1fc2
  resourcesApp41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST"#) -}
dc6a43a7ee0cd8ab33e11dfe45fae7cc
  resourcesApp42 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp25
                   Foundation.resourcesApp43) -}
53e19f6182bf439f77d75edd258109c6
  resourcesApp43 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp44
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
1627bfd069f7be792d79b4edc24728d6
  resourcesApp44 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp45) -}
103ea3871825eb31c27bc6bf8fa65387
  resourcesApp45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "insert"#) -}
5e8ebc6c6edf02bdede226ecec6d86b0
  resourcesApp46 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp47) -}
2c54020b598f94e58bd6e0f127fafa81
  resourcesApp47 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute9
                   Foundation.resourcesApp48
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
4a25c5e4409e6d5eaea52158c7e186b4
  resourcesApp48 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp52
                   Foundation.resourcesApp49) -}
3b7d321a21057e187d20f02f6ac8e123
  resourcesApp49 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp50
                   Foundation.resourcesApp34) -}
00975c7a59ee30310adccf8a4074619f
  resourcesApp5 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp69
                   Foundation.resourcesApp6) -}
5cca49bb709cbb84927b92b2ae92396d
  resourcesApp50 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp51) -}
21dd4173621b5323ebc6b462a17d02a3
  resourcesApp51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SampleTypeId"#) -}
cddb8742761fa37c38020bfc351727c1
  resourcesApp52 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp53) -}
a9f247126a30908eeaefa1bf1035fed7
  resourcesApp53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sampleType"#) -}
3da644c1bea8dcf6c75b399258b04fcf
  resourcesApp54 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp55) -}
4163065d49b80167cdf24850ff71f019
  resourcesApp55 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute28
                   Foundation.resourcesApp56
                   Foundation.resourcesApp39
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
88fe3e9c5149271c39516d0afc29e55d
  resourcesApp56 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp52
                   Foundation.resourcesApp43) -}
f7b88886a0bdaae27d8e57d33e6d27bf
  resourcesApp57 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp58) -}
fa829e764396d7acabbe1360de83ce08
  resourcesApp58 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute11
                   Foundation.resourcesApp59
                   Foundation.resourcesApp15
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
610faf9d7ba09be7a2947cae2fa97512
  resourcesApp59 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp63
                   Foundation.resourcesApp60) -}
539ac4484ade5d0401a7c16965b77ee3
  resourcesApp6 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp65
                   Foundation.resourcesApp7) -}
f227ed45a49436fc0dd8ac23e1b00600
  resourcesApp60 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp61
                   Foundation.resourcesApp20) -}
977d511652e2307a6ce71934648752e0
  resourcesApp61 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp62) -}
bf0594e234d75d04fc4b4dae51cb30ec
  resourcesApp62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserId"#) -}
95f3cf4f60bc27e9537ecbdfb1cc2b1a
  resourcesApp63 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp64) -}
5bf8783078e6a3f35e540320cac32be6
  resourcesApp64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
2be739ea5805293b23c34272a65a4a52
  resourcesApp65 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp66) -}
0b05bc1f2bd1e4b3be53bbcf87863eb0
  resourcesApp66 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute13
                   Foundation.resourcesApp67
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
d46865c77a5b469e44b93f3115de1023
  resourcesApp67 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp63
                   Foundation.resourcesApp68) -}
fc30fdb7be296ca22835bcca01ed21f4
  resourcesApp68 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp61
                   Foundation.resourcesApp34) -}
f1a555e6df1b414126ed9298ca05e353
  resourcesApp69 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp70) -}
5821752dc028e5530dfbc6cd8a9a4546
  resourcesApp7 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp57
                   Foundation.resourcesApp8) -}
3142396ef3f626532d4bbdb3fdc1b713
  resourcesApp70 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute31
                   Foundation.resourcesApp71
                   Foundation.resourcesApp39
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
62f2eb22557591301ef31631da6f9fca
  resourcesApp71 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp63
                   Foundation.resourcesApp43) -}
d7f07e722f9a2e8a15debb3a6a779a95
  resourcesApp72 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp73) -}
22ab514db8526f054bcf7033c611a618
  resourcesApp73 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute34
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e8d0b72bd183ab506b95ab3e3644b2a9
  resourcesApp74 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp75) -}
4e911f8cf4221584c3c3ed4fb0bb9e98
  resourcesApp75 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute37
                   Foundation.resourcesApp78
                   Foundation.resourcesApp76
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
01241565d9702aee83d7c63765e8cb85
  resourcesApp76 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp77) -}
b7886f6d164164b59a8d22e58c026b75
  resourcesApp77 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp31
                   Foundation.resourcesApp40) -}
70074e410b6673e773acdb3915cec358
  resourcesApp78 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp79
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
19549cad38ae2809890ab38b162aaa26
  resourcesApp79 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp80) -}
eeb93e6ed51d9e63917166781e1454ba
  resourcesApp8 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp54
                   Foundation.resourcesApp9) -}
b8c9abc8cb95f247daccfb4bc2dcb6d8
  resourcesApp80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "loginn"#) -}
4a75c319689e8bdfbe6c61dee50fd659
  resourcesApp81 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp82) -}
bc08f80b9cc5c07ebe5bed7a6d9e4134
  resourcesApp82 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute40
                   Foundation.resourcesApp83
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
d8818894277085bc9c69ae0a1a75b665
  resourcesApp83 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp84
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
8fe90436980f5e10a3d5661147ed3b0b
  resourcesApp84 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp85) -}
a8273157bee70e717841579505ada781
  resourcesApp85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "robots.txt"#) -}
3672b536cefcd0f4d0d2ffaa9a33bea8
  resourcesApp86 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp87) -}
d84c872d8951d3ea1b83377b584d3b41
  resourcesApp87 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute43
                   Foundation.resourcesApp88
                   Foundation.resourcesApp29
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
125f184a0d40409ea0f18a1f8d52c3c0
  resourcesApp88 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp89
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
593d7bcef415b10ea7001a94cb7929f6
  resourcesApp89 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp90) -}
f6c03f6a5b61c0eea99f07c14e934aee
  resourcesApp9 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp46
                   Foundation.resourcesApp10) -}
c18319bb3f3f37dfb0b0fcd8661ff226
  resourcesApp90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "favicon.ico"#) -}
c26007d4c047effaa6fe625bdcfafdef
  resourcesApp91 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp92) -}
cb985da1bd0f21eb9d2645d31905d30d
  resourcesApp92 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute15
                   Foundation.resourcesApp96
                   Foundation.resourcesApp93
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
9215dc71e919cc0fe6481d758dcd44b2
  resourcesApp93 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp95
                   Foundation.resourcesApp94) -}
63b30df6a36139db42ad57ec4bd1f010
  resourcesApp94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "appStatic"#) -}
3596cbe762d8382933a04816927486bf
  resourcesApp95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Static"#) -}
6008349f5e0e76c06ae865eb9c8b4fb7
  resourcesApp96 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp97
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
11cddb5a753287b9c8454119755b596f
  resourcesApp97 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp98) -}
33ccf03644b40bbbdbf65e60eb45a49d
  resourcesApp98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "static"#) -}
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Network.HTTP.Client.Types.HasHttpManager [Foundation.App]
  = Foundation.$fHasHttpManagerApp
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SPEC/Foundation $fApplicativeReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dApplicative :: GHC.Base.Applicative
                                                                                                 (Yesod.Core.Types.HandlerT
                                                                                                    Foundation.App
                                                                                                    GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                   ($dApplicative :: GHC.Base.Applicative
                                                                                                       (Yesod.Core.Types.HandlerT
                                                                                                          Foundation.App
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerT
                                                             Foundation.App GHC.Types.IO)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fApplicativeReaderT_$cp1Applicative @ (HandlerT
                                                          App IO) _" [ALWAYS] forall @ r
                                                                                                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                                                                                                           (Yesod.Core.Types.HandlerT
                                                                                                                                                                              Foundation.App
                                                                                                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ (Yesod.Core.Types.HandlerT
                                                                       Foundation.App GHC.Types.IO)
                                                                  @ r
                                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/Foundation $fApplicativeReaderT_$cpure @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                    ($dApplicative :: GHC.Base.Applicative
                                                                                                        (Yesod.Core.Types.HandlerT
                                                                                                           Foundation.App
                                                                                                           GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cpure @ (Yesod.Core.Types.HandlerT
                                                              Foundation.App GHC.Types.IO)
                                                         @ r
                                                         $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r
"SPEC/Foundation $fFunctorReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.App
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO)
                                              @ r
                                              $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$c<$ @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dFunctor :: GHC.Base.Functor
                                                                                              (Yesod.Core.Types.HandlerT
                                                                                                 Foundation.App
                                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                ($dFunctor :: GHC.Base.Functor
                                                                                                (Yesod.Core.Types.HandlerT
                                                                                                   Foundation.App
                                                                                                   GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerT
                                                          Foundation.App GHC.Types.IO)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.HandlerT
                                                                                        Foundation.App
                                                                                        GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerT
                                                 Foundation.App GHC.Types.IO)
                                            @ r
                                            $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                            ($dMonad :: GHC.Base.Monad
                                                                                          (Yesod.Core.Types.HandlerT
                                                                                             Foundation.App
                                                                                             GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ (Yesod.Core.Types.HandlerT
                                                      Foundation.App GHC.Types.IO)
                                                 @ r
                                                 $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dMonad :: GHC.Base.Monad
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.App
                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dMonad :: GHC.Base.Monad
                                                                                            (Yesod.Core.Types.HandlerT
                                                                                               Foundation.App
                                                                                               GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation $fMonadReaderT_$cp1Monad @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                 ($dMonad :: GHC.Base.Monad
                                                                                               (Yesod.Core.Types.HandlerT
                                                                                                  Foundation.App
                                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ (Yesod.Core.Types.HandlerT
                                                           Foundation.App GHC.Types.IO)
                                                      @ r
                                                      $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r
"SPEC/Foundation fromList @ Text" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Base.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

